variables:
    DOCKER_DRIVER: overlay2
    # Specify to Docker where to create the certificates, Docker will
    # create them automatically on boot, and will create
    # `/certs/client` that will be shared between the service and
    # build container.
    DOCKER_TLS_CERTDIR: "/certs"

stages:
    - test
    - run

echo_env:
    stage: test
    image: golang:1.14-alpine
    tags:
        - local-runner
    script:
        - go build -o exponet -ldflags="-X exponet/storage.dsn='${APP_DSN}'" cmd/main.go
    artifacts:
        paths:
            - ./exponet
        when: on_success
        expire_in: 10 min

run_binary:
    stage: run
    image: docker:19.03.12
    services: 
        - docker:19.03.12-dind
    tags:
        - local-runner
    dependencies: ["echo_env"]
    variables:
        JOB_CONTAINER_ID: $(docker ps -q -f "label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID}")
    script:
        #- docker run --rm alpine:latest echo "ECHO ${CI_BUILD_ID}" 
        - echo $CI_JOB_ID
        - echo $JOB_CONTAINER_ID
        #- docker run --rm --volumes-from $(docker ps -q -f "label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID}"):ro --workdir /builds/$CI_PROJECT_PATH alpine:latest ls -la .
        - docker run --rm -v $(pwd):/tmp alpine:latest ls -la /tmp
        - echo $(pwd)
        - mkdir -p /tmp/docker
        - cp ./exponet /tmp/docker/${CI_BUILD_ID}